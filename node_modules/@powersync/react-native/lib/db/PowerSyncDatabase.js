import { AbstractPowerSyncDatabase, SqliteBucketStorage } from '@powersync/common';
import { ReactNativeRemote } from '../sync/stream/ReactNativeRemote';
import { ReactNativeStreamingSyncImplementation } from '../sync/stream/ReactNativeStreamingSyncImplementation';
export class PowerSyncDatabase extends AbstractPowerSyncDatabase {
    async _initialize() { }
    generateBucketStorageAdapter() {
        return new SqliteBucketStorage(this.database, AbstractPowerSyncDatabase.transactionMutex);
    }
    generateSyncStreamImplementation(connector) {
        const remote = new ReactNativeRemote(connector);
        return new ReactNativeStreamingSyncImplementation({
            adapter: this.bucketStorageAdapter,
            remote,
            uploadCrud: async () => {
                await this.waitForReady();
                await connector.uploadData(this);
            },
            retryDelayMs: this.options.retryDelay,
            crudUploadThrottleMs: this.options.crudUploadThrottleMs,
            identifier: this.options.database.name
        });
    }
}
//# sourceMappingURL=PowerSyncDatabase.js.map